// Code generated by dagger-compiler.  Do not edit.
package com.turios.activities.util;

import dagger.internal.Binding;
import dagger.internal.Linker;
import java.util.Set;
import javax.inject.Provider;

/**
 * A {@code Binding<InstallLauncher>} implementation which satisfies
 * Dagger's infrastructure requirements including:
 *
 * Owning the dependency links between {@code InstallLauncher} and its
 * dependencies.
 *
 * Being a {@code Provider<InstallLauncher>} and handling creation and
 * preparation of object instances.
 */
public final class InstallLauncher$$InjectAdapter extends Binding<InstallLauncher>
    implements Provider<InstallLauncher> {
  private Binding<android.app.Activity> activity;

  public InstallLauncher$$InjectAdapter() {
    super("com.turios.activities.util.InstallLauncher", "members/com.turios.activities.util.InstallLauncher", NOT_SINGLETON, InstallLauncher.class);
  }

  /**
   * Used internally to link bindings/providers together at run time
   * according to their dependency graph.
   */
  @Override
  @SuppressWarnings("unchecked")
  public void attach(Linker linker) {
    activity = (Binding<android.app.Activity>) linker.requestBinding("android.app.Activity", InstallLauncher.class, getClass().getClassLoader());
  }

  /**
   * Used internally obtain dependency information, such as for cyclical
   * graph detection.
   */
  @Override
  public void getDependencies(Set<Binding<?>> getBindings, Set<Binding<?>> injectMembersBindings) {
    getBindings.add(activity);
  }

  /**
   * Returns the fully provisioned instance satisfying the contract for
   * {@code Provider<InstallLauncher>}.
   */
  @Override
  public InstallLauncher get() {
    InstallLauncher result = new InstallLauncher(activity.get());
    return result;
  }

}
