// Code generated by dagger-compiler.  Do not edit.
package com.turios.settings.modules;

import dagger.MembersInjector;
import dagger.internal.Binding;
import dagger.internal.Linker;
import java.util.Set;
import javax.inject.Provider;

/**
 * A {@code Binding<AccessplansSettings>} implementation which satisfies
 * Dagger's infrastructure requirements including:
 *
 * Owning the dependency links between {@code AccessplansSettings} and its
 * dependencies.
 *
 * Being a {@code Provider<AccessplansSettings>} and handling creation and
 * preparation of object instances.
 *
 * Being a {@code MembersInjector<AccessplansSettings>} and handling injection
 * of annotated fields.
 */
public final class AccessplansSettings$$InjectAdapter extends Binding<AccessplansSettings>
    implements Provider<AccessplansSettings>, MembersInjector<AccessplansSettings> {
  private Binding<android.content.Context> context;
  private Binding<com.turios.persistence.Preferences> preferences;
  private Binding<com.turios.modules.extend.AccessplansModule> accessPlansModule;
  private Binding<com.turios.dagger.DaggerPreferenceFragment> supertype;

  public AccessplansSettings$$InjectAdapter() {
    super("com.turios.settings.modules.AccessplansSettings", "members/com.turios.settings.modules.AccessplansSettings", NOT_SINGLETON, AccessplansSettings.class);
  }

  /**
   * Used internally to link bindings/providers together at run time
   * according to their dependency graph.
   */
  @Override
  @SuppressWarnings("unchecked")
  public void attach(Linker linker) {
    context = (Binding<android.content.Context>) linker.requestBinding("@com.turios.dagger.quialifiers.ForActivity()/android.content.Context", AccessplansSettings.class, getClass().getClassLoader());
    preferences = (Binding<com.turios.persistence.Preferences>) linker.requestBinding("com.turios.persistence.Preferences", AccessplansSettings.class, getClass().getClassLoader());
    accessPlansModule = (Binding<com.turios.modules.extend.AccessplansModule>) linker.requestBinding("com.turios.modules.extend.AccessplansModule", AccessplansSettings.class, getClass().getClassLoader());
    supertype = (Binding<com.turios.dagger.DaggerPreferenceFragment>) linker.requestBinding("members/com.turios.dagger.DaggerPreferenceFragment", AccessplansSettings.class, getClass().getClassLoader(), false, true);
  }

  /**
   * Used internally obtain dependency information, such as for cyclical
   * graph detection.
   */
  @Override
  public void getDependencies(Set<Binding<?>> getBindings, Set<Binding<?>> injectMembersBindings) {
    injectMembersBindings.add(context);
    injectMembersBindings.add(preferences);
    injectMembersBindings.add(accessPlansModule);
    injectMembersBindings.add(supertype);
  }

  /**
   * Returns the fully provisioned instance satisfying the contract for
   * {@code Provider<AccessplansSettings>}.
   */
  @Override
  public AccessplansSettings get() {
    AccessplansSettings result = new AccessplansSettings();
    injectMembers(result);
    return result;
  }

  /**
   * Injects any {@code @Inject} annotated fields in the given instance,
   * satisfying the contract for {@code Provider<AccessplansSettings>}.
   */
  @Override
  public void injectMembers(AccessplansSettings object) {
    object.context = context.get();
    object.preferences = preferences.get();
    object.accessPlansModule = accessPlansModule.get();
    supertype.injectMembers(object);
  }

}
