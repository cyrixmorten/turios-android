// Code generated by dagger-compiler.  Do not edit.
package com.turios.activities.fragments;

import dagger.MembersInjector;
import dagger.internal.Binding;
import dagger.internal.Linker;
import java.util.Set;
import javax.inject.Provider;

/**
 * A {@code Binding<DisplayFragment>} implementation which satisfies
 * Dagger's infrastructure requirements including:
 *
 * Owning the dependency links between {@code DisplayFragment} and its
 * dependencies.
 *
 * Being a {@code Provider<DisplayFragment>} and handling creation and
 * preparation of object instances.
 *
 * Being a {@code MembersInjector<DisplayFragment>} and handling injection
 * of annotated fields.
 */
public final class DisplayFragment$$InjectAdapter extends Binding<DisplayFragment>
    implements Provider<DisplayFragment>, MembersInjector<DisplayFragment> {
  private Binding<android.content.Context> context;
  private Binding<android.support.v4.app.FragmentManager> fm;
  private Binding<com.turios.activities.TuriosActionBarController> mTuriosActionBar;
  private Binding<android.app.ActionBar> mActionBar;
  private Binding<android.view.MenuInflater> mMenuInflater;
  private Binding<android.view.LayoutInflater> inflater;
  private Binding<com.turios.activities.util.WakeScreen> wakeScreen;
  private Binding<com.turios.util.Device> device;
  private Binding<android.os.Handler> handler;
  private Binding<com.turios.modules.core.ParseCoreModule> parse;
  private Binding<com.turios.modules.core.ExpirationCoreModule> expiration;
  private Binding<com.turios.modules.core.DatabaseCoreModule> database;
  private Binding<com.turios.modules.core.PathsCoreModule> paths;
  private Binding<com.turios.modules.core.DisplayCoreModule> display;
  private Binding<com.turios.modules.core.LocationsCoreModule> locationService;
  private Binding<com.turios.modules.extend.AccessplansModule> accessplansModule;
  private Binding<com.turios.modules.extend.BasisModule> basisModule;
  private Binding<com.turios.modules.extend.BrowserModule> browserModule;
  private Binding<com.turios.modules.extend.DropboxModule> dropboxModule;
  private Binding<com.turios.modules.extend.GoogleMapsModule> googleMapsModule;
  private Binding<com.turios.modules.extend.DirectionsModule> directionsModule;
  private Binding<com.turios.modules.extend.HydrantsModule> hydrantsModule;
  private Binding<com.turios.modules.extend.PicklistModule> picklistModule;
  private Binding<com.turios.dagger.DaggerFragment> supertype;

  public DisplayFragment$$InjectAdapter() {
    super("com.turios.activities.fragments.DisplayFragment", "members/com.turios.activities.fragments.DisplayFragment", NOT_SINGLETON, DisplayFragment.class);
  }

  /**
   * Used internally to link bindings/providers together at run time
   * according to their dependency graph.
   */
  @Override
  @SuppressWarnings("unchecked")
  public void attach(Linker linker) {
    context = (Binding<android.content.Context>) linker.requestBinding("@com.turios.dagger.quialifiers.ForActivity()/android.content.Context", DisplayFragment.class, getClass().getClassLoader());
    fm = (Binding<android.support.v4.app.FragmentManager>) linker.requestBinding("android.support.v4.app.FragmentManager", DisplayFragment.class, getClass().getClassLoader());
    mTuriosActionBar = (Binding<com.turios.activities.TuriosActionBarController>) linker.requestBinding("com.turios.activities.TuriosActionBarController", DisplayFragment.class, getClass().getClassLoader());
    mActionBar = (Binding<android.app.ActionBar>) linker.requestBinding("android.app.ActionBar", DisplayFragment.class, getClass().getClassLoader());
    mMenuInflater = (Binding<android.view.MenuInflater>) linker.requestBinding("android.view.MenuInflater", DisplayFragment.class, getClass().getClassLoader());
    inflater = (Binding<android.view.LayoutInflater>) linker.requestBinding("android.view.LayoutInflater", DisplayFragment.class, getClass().getClassLoader());
    wakeScreen = (Binding<com.turios.activities.util.WakeScreen>) linker.requestBinding("com.turios.activities.util.WakeScreen", DisplayFragment.class, getClass().getClassLoader());
    device = (Binding<com.turios.util.Device>) linker.requestBinding("com.turios.util.Device", DisplayFragment.class, getClass().getClassLoader());
    handler = (Binding<android.os.Handler>) linker.requestBinding("android.os.Handler", DisplayFragment.class, getClass().getClassLoader());
    parse = (Binding<com.turios.modules.core.ParseCoreModule>) linker.requestBinding("com.turios.modules.core.ParseCoreModule", DisplayFragment.class, getClass().getClassLoader());
    expiration = (Binding<com.turios.modules.core.ExpirationCoreModule>) linker.requestBinding("com.turios.modules.core.ExpirationCoreModule", DisplayFragment.class, getClass().getClassLoader());
    database = (Binding<com.turios.modules.core.DatabaseCoreModule>) linker.requestBinding("com.turios.modules.core.DatabaseCoreModule", DisplayFragment.class, getClass().getClassLoader());
    paths = (Binding<com.turios.modules.core.PathsCoreModule>) linker.requestBinding("com.turios.modules.core.PathsCoreModule", DisplayFragment.class, getClass().getClassLoader());
    display = (Binding<com.turios.modules.core.DisplayCoreModule>) linker.requestBinding("com.turios.modules.core.DisplayCoreModule", DisplayFragment.class, getClass().getClassLoader());
    locationService = (Binding<com.turios.modules.core.LocationsCoreModule>) linker.requestBinding("com.turios.modules.core.LocationsCoreModule", DisplayFragment.class, getClass().getClassLoader());
    accessplansModule = (Binding<com.turios.modules.extend.AccessplansModule>) linker.requestBinding("com.turios.modules.extend.AccessplansModule", DisplayFragment.class, getClass().getClassLoader());
    basisModule = (Binding<com.turios.modules.extend.BasisModule>) linker.requestBinding("com.turios.modules.extend.BasisModule", DisplayFragment.class, getClass().getClassLoader());
    browserModule = (Binding<com.turios.modules.extend.BrowserModule>) linker.requestBinding("com.turios.modules.extend.BrowserModule", DisplayFragment.class, getClass().getClassLoader());
    dropboxModule = (Binding<com.turios.modules.extend.DropboxModule>) linker.requestBinding("com.turios.modules.extend.DropboxModule", DisplayFragment.class, getClass().getClassLoader());
    googleMapsModule = (Binding<com.turios.modules.extend.GoogleMapsModule>) linker.requestBinding("com.turios.modules.extend.GoogleMapsModule", DisplayFragment.class, getClass().getClassLoader());
    directionsModule = (Binding<com.turios.modules.extend.DirectionsModule>) linker.requestBinding("com.turios.modules.extend.DirectionsModule", DisplayFragment.class, getClass().getClassLoader());
    hydrantsModule = (Binding<com.turios.modules.extend.HydrantsModule>) linker.requestBinding("com.turios.modules.extend.HydrantsModule", DisplayFragment.class, getClass().getClassLoader());
    picklistModule = (Binding<com.turios.modules.extend.PicklistModule>) linker.requestBinding("com.turios.modules.extend.PicklistModule", DisplayFragment.class, getClass().getClassLoader());
    supertype = (Binding<com.turios.dagger.DaggerFragment>) linker.requestBinding("members/com.turios.dagger.DaggerFragment", DisplayFragment.class, getClass().getClassLoader(), false, true);
  }

  /**
   * Used internally obtain dependency information, such as for cyclical
   * graph detection.
   */
  @Override
  public void getDependencies(Set<Binding<?>> getBindings, Set<Binding<?>> injectMembersBindings) {
    injectMembersBindings.add(context);
    injectMembersBindings.add(fm);
    injectMembersBindings.add(mTuriosActionBar);
    injectMembersBindings.add(mActionBar);
    injectMembersBindings.add(mMenuInflater);
    injectMembersBindings.add(inflater);
    injectMembersBindings.add(wakeScreen);
    injectMembersBindings.add(device);
    injectMembersBindings.add(handler);
    injectMembersBindings.add(parse);
    injectMembersBindings.add(expiration);
    injectMembersBindings.add(database);
    injectMembersBindings.add(paths);
    injectMembersBindings.add(display);
    injectMembersBindings.add(locationService);
    injectMembersBindings.add(accessplansModule);
    injectMembersBindings.add(basisModule);
    injectMembersBindings.add(browserModule);
    injectMembersBindings.add(dropboxModule);
    injectMembersBindings.add(googleMapsModule);
    injectMembersBindings.add(directionsModule);
    injectMembersBindings.add(hydrantsModule);
    injectMembersBindings.add(picklistModule);
    injectMembersBindings.add(supertype);
  }

  /**
   * Returns the fully provisioned instance satisfying the contract for
   * {@code Provider<DisplayFragment>}.
   */
  @Override
  public DisplayFragment get() {
    DisplayFragment result = new DisplayFragment();
    injectMembers(result);
    return result;
  }

  /**
   * Injects any {@code @Inject} annotated fields in the given instance,
   * satisfying the contract for {@code Provider<DisplayFragment>}.
   */
  @Override
  public void injectMembers(DisplayFragment object) {
    object.context = context.get();
    object.fm = fm.get();
    object.mTuriosActionBar = mTuriosActionBar.get();
    object.mActionBar = mActionBar.get();
    object.mMenuInflater = mMenuInflater.get();
    object.inflater = inflater.get();
    object.wakeScreen = wakeScreen.get();
    object.device = device.get();
    object.handler = handler.get();
    object.parse = parse.get();
    object.expiration = expiration.get();
    object.database = database.get();
    object.paths = paths.get();
    object.display = display.get();
    object.locationService = locationService.get();
    object.accessplansModule = accessplansModule.get();
    object.basisModule = basisModule.get();
    object.browserModule = browserModule.get();
    object.dropboxModule = dropboxModule.get();
    object.googleMapsModule = googleMapsModule.get();
    object.directionsModule = directionsModule.get();
    object.hydrantsModule = hydrantsModule.get();
    object.picklistModule = picklistModule.get();
    supertype.injectMembers(object);
  }

}
