// Code generated by dagger-compiler.  Do not edit.
package com.turios.activities.listeners;

import dagger.internal.Binding;
import dagger.internal.Linker;
import java.util.Set;
import javax.inject.Provider;

/**
 * A {@code Binding<TuriosExpirationListener>} implementation which satisfies
 * Dagger's infrastructure requirements including:
 *
 * Owning the dependency links between {@code TuriosExpirationListener} and its
 * dependencies.
 *
 * Being a {@code Provider<TuriosExpirationListener>} and handling creation and
 * preparation of object instances.
 */
public final class TuriosExpirationListener$$InjectAdapter extends Binding<TuriosExpirationListener>
    implements Provider<TuriosExpirationListener> {
  private Binding<TuriosUICallback> mTuriosUICallback;
  private Binding<com.turios.modules.extend.BasisModule> mBasisModule;

  public TuriosExpirationListener$$InjectAdapter() {
    super("com.turios.activities.listeners.TuriosExpirationListener", "members/com.turios.activities.listeners.TuriosExpirationListener", NOT_SINGLETON, TuriosExpirationListener.class);
  }

  /**
   * Used internally to link bindings/providers together at run time
   * according to their dependency graph.
   */
  @Override
  @SuppressWarnings("unchecked")
  public void attach(Linker linker) {
    mTuriosUICallback = (Binding<TuriosUICallback>) linker.requestBinding("com.turios.activities.listeners.TuriosUICallback", TuriosExpirationListener.class, getClass().getClassLoader());
    mBasisModule = (Binding<com.turios.modules.extend.BasisModule>) linker.requestBinding("com.turios.modules.extend.BasisModule", TuriosExpirationListener.class, getClass().getClassLoader());
  }

  /**
   * Used internally obtain dependency information, such as for cyclical
   * graph detection.
   */
  @Override
  public void getDependencies(Set<Binding<?>> getBindings, Set<Binding<?>> injectMembersBindings) {
    getBindings.add(mTuriosUICallback);
    getBindings.add(mBasisModule);
  }

  /**
   * Returns the fully provisioned instance satisfying the contract for
   * {@code Provider<TuriosExpirationListener>}.
   */
  @Override
  public TuriosExpirationListener get() {
    TuriosExpirationListener result = new TuriosExpirationListener(mTuriosUICallback.get(), mBasisModule.get());
    return result;
  }

}
