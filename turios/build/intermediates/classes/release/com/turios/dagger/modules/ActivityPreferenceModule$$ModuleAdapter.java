// Code generated by dagger-compiler.  Do not edit.
package com.turios.dagger.modules;

import dagger.internal.Binding;
import dagger.internal.Linker;
import dagger.internal.ModuleAdapter;
import java.util.Map;
import java.util.Set;
import javax.inject.Provider;

/**
 * A manager of modules and provides adapters allowing for proper linking and
 * instance provision of types served by {@code @Provides} methods.
 */
public final class ActivityPreferenceModule$$ModuleAdapter extends ModuleAdapter<ActivityPreferenceModule> {
  private static final String[] INJECTS = { "members/com.turios.activities.SettingsActivity", "members/com.turios.settings.global.ConnectUnitsSettings", "members/com.turios.settings.global.GeneralSettings", "members/com.turios.settings.global.ProfilesSettings", "members/com.turios.settings.global.UpdateSettings", "members/com.turios.settings.modules.AccessplansSettings", "members/com.turios.settings.modules.BasisEntrySettings", "members/com.turios.settings.modules.BasisSettings", "members/com.turios.settings.modules.BrowserSettings", "members/com.turios.settings.modules.DirectionsSettings", "members/com.turios.settings.modules.DropboxSettings", "members/com.turios.settings.modules.GoogleMapsSettings", "members/com.turios.settings.modules.HydrantsSettings", "members/com.turios.settings.modules.PicklistSettings", };
  private static final Class<?>[] STATIC_INJECTIONS = { };
  private static final Class<?>[] INCLUDES = { };

  public ActivityPreferenceModule$$ModuleAdapter() {
    super(com.turios.dagger.modules.ActivityPreferenceModule.class, INJECTS, STATIC_INJECTIONS, false /*overrides*/, INCLUDES, true /*complete*/, true /*library*/);
  }

  /**
   * Used internally obtain dependency information, such as for cyclical
   * graph detection.
   */
  @Override
  public void getBindings(Map<String, Binding<?>> map, ActivityPreferenceModule module) {
    map.put("android.app.Activity", new ProvideActivityProvidesAdapter(module));
    map.put("@com.turios.dagger.quialifiers.ForActivity()/android.content.Context", new ProvideActivityContextProvidesAdapter(module));
    map.put("android.app.FragmentManager", new ProvideFragmentManagerProvidesAdapter(module));
    map.put("com.turios.activities.util.InstallLauncher", new ProvideInstallLauncherProvidesAdapter(module));
  }

  /**
   * A {@code Binding<android.app.Activity>} implementation which satisfies
   * Dagger's infrastructure requirements including:
   *
   * Being a {@code Provider<android.app.Activity>} and handling creation and
   * preparation of object instances.
   */
  public static final class ProvideActivityProvidesAdapter extends Binding<android.app.Activity>
      implements Provider<android.app.Activity> {
    private final ActivityPreferenceModule module;

    public ProvideActivityProvidesAdapter(ActivityPreferenceModule module) {
      super("android.app.Activity", null, IS_SINGLETON, "com.turios.dagger.modules.ActivityPreferenceModule.provideActivity()");
      this.module = module;
      setLibrary(true);
    }

    /**
     * Returns the fully provisioned instance satisfying the contract for
     * {@code Provider<android.app.Activity>}.
     */
    @Override
    public android.app.Activity get() {
      return module.provideActivity();
    }
  }

  /**
   * A {@code Binding<android.content.Context>} implementation which satisfies
   * Dagger's infrastructure requirements including:
   *
   * Being a {@code Provider<android.content.Context>} and handling creation and
   * preparation of object instances.
   */
  public static final class ProvideActivityContextProvidesAdapter extends Binding<android.content.Context>
      implements Provider<android.content.Context> {
    private final ActivityPreferenceModule module;

    public ProvideActivityContextProvidesAdapter(ActivityPreferenceModule module) {
      super("@com.turios.dagger.quialifiers.ForActivity()/android.content.Context", null, IS_SINGLETON, "com.turios.dagger.modules.ActivityPreferenceModule.provideActivityContext()");
      this.module = module;
      setLibrary(true);
    }

    /**
     * Returns the fully provisioned instance satisfying the contract for
     * {@code Provider<android.content.Context>}.
     */
    @Override
    public android.content.Context get() {
      return module.provideActivityContext();
    }
  }

  /**
   * A {@code Binding<android.app.FragmentManager>} implementation which satisfies
   * Dagger's infrastructure requirements including:
   *
   * Being a {@code Provider<android.app.FragmentManager>} and handling creation and
   * preparation of object instances.
   */
  public static final class ProvideFragmentManagerProvidesAdapter extends Binding<android.app.FragmentManager>
      implements Provider<android.app.FragmentManager> {
    private final ActivityPreferenceModule module;

    public ProvideFragmentManagerProvidesAdapter(ActivityPreferenceModule module) {
      super("android.app.FragmentManager", null, IS_SINGLETON, "com.turios.dagger.modules.ActivityPreferenceModule.provideFragmentManager()");
      this.module = module;
      setLibrary(true);
    }

    /**
     * Returns the fully provisioned instance satisfying the contract for
     * {@code Provider<android.app.FragmentManager>}.
     */
    @Override
    public android.app.FragmentManager get() {
      return module.provideFragmentManager();
    }
  }

  /**
   * A {@code Binding<com.turios.activities.util.InstallLauncher>} implementation which satisfies
   * Dagger's infrastructure requirements including:
   *
   * Owning the dependency links between {@code com.turios.activities.util.InstallLauncher} and its
   * dependencies.
   *
   * Being a {@code Provider<com.turios.activities.util.InstallLauncher>} and handling creation and
   * preparation of object instances.
   */
  public static final class ProvideInstallLauncherProvidesAdapter extends Binding<com.turios.activities.util.InstallLauncher>
      implements Provider<com.turios.activities.util.InstallLauncher> {
    private final ActivityPreferenceModule module;
    private Binding<android.app.Activity> activity;

    public ProvideInstallLauncherProvidesAdapter(ActivityPreferenceModule module) {
      super("com.turios.activities.util.InstallLauncher", null, IS_SINGLETON, "com.turios.dagger.modules.ActivityPreferenceModule.provideInstallLauncher()");
      this.module = module;
      setLibrary(true);
    }

    /**
     * Used internally to link bindings/providers together at run time
     * according to their dependency graph.
     */
    @Override
    @SuppressWarnings("unchecked")
    public void attach(Linker linker) {
      activity = (Binding<android.app.Activity>) linker.requestBinding("android.app.Activity", ActivityPreferenceModule.class, getClass().getClassLoader());
    }

    /**
     * Used internally obtain dependency information, such as for cyclical
     * graph detection.
     */
    @Override
    public void getDependencies(Set<Binding<?>> getBindings, Set<Binding<?>> injectMembersBindings) {
      getBindings.add(activity);
    }

    /**
     * Returns the fully provisioned instance satisfying the contract for
     * {@code Provider<com.turios.activities.util.InstallLauncher>}.
     */
    @Override
    public com.turios.activities.util.InstallLauncher get() {
      return module.provideInstallLauncher(activity.get());
    }
  }
}
