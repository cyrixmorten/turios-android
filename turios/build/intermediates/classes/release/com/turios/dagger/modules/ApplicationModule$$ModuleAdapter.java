// Code generated by dagger-compiler.  Do not edit.
package com.turios.dagger.modules;

import dagger.internal.Binding;
import dagger.internal.Linker;
import dagger.internal.ModuleAdapter;
import java.util.Map;
import java.util.Set;
import javax.inject.Provider;

/**
 * A manager of modules and provides adapters allowing for proper linking and
 * instance provision of types served by {@code @Provides} methods.
 */
public final class ApplicationModule$$ModuleAdapter extends ModuleAdapter<ApplicationModule> {
  private static final String[] INJECTS = { "members/com.turios.persistence.Preferences", "members/com.turios.modules.core.DatabaseCoreModule", "members/com.turios.modules.core.DisplayCoreModule", "members/com.turios.modules.core.ExpirationCoreModule", "members/com.turios.modules.core.LocationsCoreModule", "members/com.turios.modules.core.ParseCoreModule", "members/com.turios.modules.core.PathsCoreModule", "members/com.turios.modules.extend.AccessplansModule", "members/com.turios.modules.extend.BasisModule", "members/com.turios.modules.extend.BrowserModule", "members/com.turios.modules.extend.DirectionsModule", "members/com.turios.modules.extend.DropboxModule", "members/com.turios.modules.extend.GoogleMapsModule", "members/com.turios.modules.extend.HydrantsModule", "members/com.turios.modules.extend.PicklistModule", "members/com.turios.sms.ParseSMSReceiver", "members/com.turios.sms.SMSReceiver", "members/com.turios.sms.TuriosMessageReceiver", "members/com.turios.wakefulservices.UpdateStateService", };
  private static final Class<?>[] STATIC_INJECTIONS = { };
  private static final Class<?>[] INCLUDES = { };

  public ApplicationModule$$ModuleAdapter() {
    super(com.turios.dagger.modules.ApplicationModule.class, INJECTS, STATIC_INJECTIONS, false /*overrides*/, INCLUDES, true /*complete*/, true /*library*/);
  }

  /**
   * Used internally obtain dependency information, such as for cyclical
   * graph detection.
   */
  @Override
  public void getBindings(Map<String, Binding<?>> map, ApplicationModule module) {
    map.put("@com.turios.dagger.quialifiers.ForApplication()/android.content.Context", new ProvideApplicationContextProvidesAdapter(module));
    map.put("com.turios.util.Device", new ProvideDeviceProvidesAdapter(module));
    map.put("android.location.LocationManager", new ProvideLocationManagerProvidesAdapter(module));
    map.put("com.google.android.gms.location.LocationRequest", new ProvideLocationRequestProvidesAdapter(module));
  }

  /**
   * A {@code Binding<android.content.Context>} implementation which satisfies
   * Dagger's infrastructure requirements including:
   *
   * Being a {@code Provider<android.content.Context>} and handling creation and
   * preparation of object instances.
   */
  public static final class ProvideApplicationContextProvidesAdapter extends Binding<android.content.Context>
      implements Provider<android.content.Context> {
    private final ApplicationModule module;

    public ProvideApplicationContextProvidesAdapter(ApplicationModule module) {
      super("@com.turios.dagger.quialifiers.ForApplication()/android.content.Context", null, IS_SINGLETON, "com.turios.dagger.modules.ApplicationModule.provideApplicationContext()");
      this.module = module;
      setLibrary(true);
    }

    /**
     * Returns the fully provisioned instance satisfying the contract for
     * {@code Provider<android.content.Context>}.
     */
    @Override
    public android.content.Context get() {
      return module.provideApplicationContext();
    }
  }

  /**
   * A {@code Binding<com.turios.util.Device>} implementation which satisfies
   * Dagger's infrastructure requirements including:
   *
   * Owning the dependency links between {@code com.turios.util.Device} and its
   * dependencies.
   *
   * Being a {@code Provider<com.turios.util.Device>} and handling creation and
   * preparation of object instances.
   */
  public static final class ProvideDeviceProvidesAdapter extends Binding<com.turios.util.Device>
      implements Provider<com.turios.util.Device> {
    private final ApplicationModule module;
    private Binding<android.content.Context> context;

    public ProvideDeviceProvidesAdapter(ApplicationModule module) {
      super("com.turios.util.Device", null, IS_SINGLETON, "com.turios.dagger.modules.ApplicationModule.provideDevice()");
      this.module = module;
      setLibrary(true);
    }

    /**
     * Used internally to link bindings/providers together at run time
     * according to their dependency graph.
     */
    @Override
    @SuppressWarnings("unchecked")
    public void attach(Linker linker) {
      context = (Binding<android.content.Context>) linker.requestBinding("@com.turios.dagger.quialifiers.ForApplication()/android.content.Context", ApplicationModule.class, getClass().getClassLoader());
    }

    /**
     * Used internally obtain dependency information, such as for cyclical
     * graph detection.
     */
    @Override
    public void getDependencies(Set<Binding<?>> getBindings, Set<Binding<?>> injectMembersBindings) {
      getBindings.add(context);
    }

    /**
     * Returns the fully provisioned instance satisfying the contract for
     * {@code Provider<com.turios.util.Device>}.
     */
    @Override
    public com.turios.util.Device get() {
      return module.provideDevice(context.get());
    }
  }

  /**
   * A {@code Binding<android.location.LocationManager>} implementation which satisfies
   * Dagger's infrastructure requirements including:
   *
   * Being a {@code Provider<android.location.LocationManager>} and handling creation and
   * preparation of object instances.
   */
  public static final class ProvideLocationManagerProvidesAdapter extends Binding<android.location.LocationManager>
      implements Provider<android.location.LocationManager> {
    private final ApplicationModule module;

    public ProvideLocationManagerProvidesAdapter(ApplicationModule module) {
      super("android.location.LocationManager", null, IS_SINGLETON, "com.turios.dagger.modules.ApplicationModule.provideLocationManager()");
      this.module = module;
      setLibrary(true);
    }

    /**
     * Returns the fully provisioned instance satisfying the contract for
     * {@code Provider<android.location.LocationManager>}.
     */
    @Override
    public android.location.LocationManager get() {
      return module.provideLocationManager();
    }
  }

  /**
   * A {@code Binding<com.google.android.gms.location.LocationRequest>} implementation which satisfies
   * Dagger's infrastructure requirements including:
   *
   * Being a {@code Provider<com.google.android.gms.location.LocationRequest>} and handling creation and
   * preparation of object instances.
   */
  public static final class ProvideLocationRequestProvidesAdapter extends Binding<com.google.android.gms.location.LocationRequest>
      implements Provider<com.google.android.gms.location.LocationRequest> {
    private final ApplicationModule module;

    public ProvideLocationRequestProvidesAdapter(ApplicationModule module) {
      super("com.google.android.gms.location.LocationRequest", null, NOT_SINGLETON, "com.turios.dagger.modules.ApplicationModule.provideLocationRequest()");
      this.module = module;
      setLibrary(true);
    }

    /**
     * Returns the fully provisioned instance satisfying the contract for
     * {@code Provider<com.google.android.gms.location.LocationRequest>}.
     */
    @Override
    public com.google.android.gms.location.LocationRequest get() {
      return module.provideLocationRequest();
    }
  }
}
